name: Fuzz Testing

permissions:
  contents: read

on:
  push:
    branches: [ main, release/* ]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:
  parallel-fuzz:
    name: Run fuzz tests in parallel
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          cache-key: "fuzz-tests"
      
      - name: Install cargo-fuzz
        run: cargo install cargo-fuzz
      
      - name: Install GNU Parallel
        run: sudo apt-get install -y parallel
      
      - name: Get fuzz targets
        id: get-targets
        run: |
          TARGETS=$(ls fuzz/fuzz_targets/ | sed 's/\.rs$//' | tr '\n' ' ')
          echo "targets=$TARGETS" >> "$GITHUB_OUTPUT"
      
      - name: Run parallel fuzz tests
        run: |
          # Create a command file for parallel
          for target in ${{ steps.get-targets.outputs.targets }}; do
            echo "cargo fuzz run $target" -- -runs=100000 >> fuzz_commands.txt
          done
          
          # Run commands in parallel with a timeout of 300 seconds (5 minutes)
          timeout 300 parallel --jobs 3 :::: fuzz_commands.txt || \
          if [ $? -eq 124 ]; then
            echo "Fuzzing completed due to timeout"
            exit 0
          else
            echo "Fuzzing failed"
            exit 1
          fi

      - name: Check for crashes
        if: failure()
        run: |
          if find fuzz/artifacts -name "crash-*" -quit; then
            echo "::error::Fuzzing found crashes! Check the artifacts directory."
            exit 1
          fi