#![allow(dead_code)]
#![cfg(feature = "e2e")]
use alloy::{primitives::Address, sol};
use e2e::Wallet;

sol! {
    #[allow(missing_docs)]
    // Built with Remix IDE; solc v0.8.21+commit.d9974bed
    #[sol(rpc, bytecode="608060405234801562000010575f80fd5b506040518060400160405280601181526020017f45524332304e6f52657475726e4d6f636b0000000000000000000000000000008152506040518060400160405280600381526020017f4e524d000000000000000000000000000000000000000000000000000000000081525081600390816200008e91906200030d565b508060049081620000a091906200030d565b505050620003f1565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200012557607f821691505b6020821081036200013b576200013a620000e0565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026200019f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000162565b620001ab868362000162565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f620001f5620001ef620001e984620001c3565b620001cc565b620001c3565b9050919050565b5f819050919050565b6200021083620001d5565b620002286200021f82620001fc565b8484546200016e565b825550505050565b5f90565b6200023e62000230565b6200024b81848462000205565b505050565b5b818110156200027257620002665f8262000234565b60018101905062000251565b5050565b601f821115620002c1576200028b8162000141565b620002968462000153565b81016020851015620002a6578190505b620002be620002b58562000153565b83018262000250565b50505b505050565b5f82821c905092915050565b5f620002e35f1984600802620002c6565b1980831691505092915050565b5f620002fd8383620002d2565b9150826002028217905092915050565b6200031882620000a9565b67ffffffffffffffff811115620003345762000333620000b3565b5b6200034082546200010d565b6200034d82828562000276565b5f60209050601f83116001811462000383575f84156200036e578287015190505b6200037a8582620002f0565b865550620003e9565b601f198416620003938662000141565b5f5b82811015620003bc5784890151825560018201915060208501945060208101905062000395565b86831015620003dc5784890151620003d8601f891682620002d2565b8355505b6001600288020188555050505b505050505050565b610f3980620003ff5f395ff3fe608060405234801561000f575f80fd5b50600436106100a7575f3560e01c806340c10f191161006f57806340c10f191461016557806361f49ed61461018157806370a082311461019d57806395d89b41146101cd578063a9059cbb146101eb578063dd62ed3e1461021b576100a7565b806306fdde03146100ab578063095ea7b3146100c957806318160ddd146100f957806323b872dd14610117578063313ce56714610147575b5f80fd5b6100b361024b565b6040516100c09190610bb2565b60405180910390f35b6100e360048036038101906100de9190610c63565b6102db565b6040516100f09190610cbb565b60405180910390f35b6101016102ea565b60405161010e9190610ce3565b60405180910390f35b610131600480360381019061012c9190610cfc565b6102f3565b60405161013e9190610cbb565b60405180910390f35b61014f610303565b60405161015c9190610d67565b60405180910390f35b61017f600480360381019061017a9190610c63565b61030b565b005b61019b60048036038101906101969190610cfc565b610319565b005b6101b760048036038101906101b29190610d80565b610329565b6040516101c49190610ce3565b60405180910390f35b6101d561033a565b6040516101e29190610bb2565b60405180910390f35b61020560048036038101906102009190610c63565b6103ca565b6040516102129190610cbb565b60405180910390f35b61023560048036038101906102309190610dab565b6103d9565b6040516102429190610ce3565b60405180910390f35b60606003805461025a90610e16565b80601f016020809104026020016040519081016040528092919081815260200182805461028690610e16565b80156102d15780601f106102a8576101008083540402835291602001916102d1565b820191905f5260205f20905b8154815290600101906020018083116102b457829003601f168201915b5050505050905090565b5f6102e683836103ec565b5f80f35b5f600254905090565b5f6102ff84848461040e565b5f80f35b5f6012905090565b610315828261043c565b5050565b6103248383836104bb565b505050565b5f610333826104cd565b9050919050565b60606004805461034990610e16565b80601f016020809104026020016040519081016040528092919081815260200182805461037590610e16565b80156103c05780601f10610397576101008083540402835291602001916103c0565b820191905f5260205f20905b8154815290600101906020018083116103a357829003601f168201915b5050505050905090565b5f6103d58383610512565b5f80f35b5f6103e48383610534565b905092915050565b5f806103f66105b6565b90506104038185856104bb565b600191505092915050565b5f806104186105b6565b90506104258582856105bd565b610430858585610650565b60019150509392505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036104ac575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016104a39190610e55565b60405180910390fd5b6104b75f8383610740565b5050565b6104c88383836001610959565b505050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f8061051c6105b6565b9050610529818585610650565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b5f6105c884846103d9565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81101561064a578181101561063b578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161063293929190610e6e565b60405180910390fd5b61064984848484035f610959565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036106c0575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016106b79190610e55565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610730575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016107279190610e55565b60405180910390fd5b61073b838383610740565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610790578060025f8282546107849190610ed0565b9250508190555061085e565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610819578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161081093929190610e6e565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108a5578060025f82825403925050819055506108ef565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161094c9190610ce3565b60405180910390a3505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036109c9575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016109c09190610e55565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a39575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610a309190610e55565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610b22578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610b199190610ce3565b60405180910390a35b50505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015610b5f578082015181840152602081019050610b44565b5f8484015250505050565b5f601f19601f8301169050919050565b5f610b8482610b28565b610b8e8185610b32565b9350610b9e818560208601610b42565b610ba781610b6a565b840191505092915050565b5f6020820190508181035f830152610bca8184610b7a565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610bff82610bd6565b9050919050565b610c0f81610bf5565b8114610c19575f80fd5b50565b5f81359050610c2a81610c06565b92915050565b5f819050919050565b610c4281610c30565b8114610c4c575f80fd5b50565b5f81359050610c5d81610c39565b92915050565b5f8060408385031215610c7957610c78610bd2565b5b5f610c8685828601610c1c565b9250506020610c9785828601610c4f565b9150509250929050565b5f8115159050919050565b610cb581610ca1565b82525050565b5f602082019050610cce5f830184610cac565b92915050565b610cdd81610c30565b82525050565b5f602082019050610cf65f830184610cd4565b92915050565b5f805f60608486031215610d1357610d12610bd2565b5b5f610d2086828701610c1c565b9350506020610d3186828701610c1c565b9250506040610d4286828701610c4f565b9150509250925092565b5f60ff82169050919050565b610d6181610d4c565b82525050565b5f602082019050610d7a5f830184610d58565b92915050565b5f60208284031215610d9557610d94610bd2565b5b5f610da284828501610c1c565b91505092915050565b5f8060408385031215610dc157610dc0610bd2565b5b5f610dce85828601610c1c565b9250506020610ddf85828601610c1c565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610e2d57607f821691505b602082108103610e4057610e3f610de9565b5b50919050565b610e4f81610bf5565b82525050565b5f602082019050610e685f830184610e46565b92915050565b5f606082019050610e815f830186610e46565b610e8e6020830185610cd4565b610e9b6040830184610cd4565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610eda82610c30565b9150610ee583610c30565b9250828201905080821115610efd57610efc610ea3565b5b9291505056fea264697066735822122015f7fdbe49cfc7999b1d0a13ce807db2acace3951c9fe7f525adb9491652588d64736f6c63430008150033")]
    // SPDX-License-Identifier: MIT
    contract ERC20NoReturnMock is ERC20 {
        constructor() ERC20("ERC20NoReturnMock", "NRM") {}

        function transfer(address to, uint256 amount) public override returns (bool) {
            super.transfer(to, amount);
            assembly {
                return(0, 0)
            }
        }

        function transferFrom(address from, address to, uint256 amount) public override returns (bool) {
            super.transferFrom(from, to, amount);
            assembly {
                return(0, 0)
            }
        }

        function approve(address spender, uint256 amount) public override returns (bool) {
            super.approve(spender, amount);
            assembly {
                return(0, 0)
            }
        }

        function forceApprove(address owner, address spender, uint256 amount) public {
            super._approve(owner, spender, amount);
        }

        function balanceOf(address account) public override view returns (uint256) {
            return super.balanceOf(account);
        }

        function mint(address account, uint256 value) public {
            super._mint(account, value);
        }

        function allowance(address owner, address spender) public view override returns (uint256) {
            return super.allowance(owner, spender);
        }
    }
}

pub async fn deploy(wallet: &Wallet) -> eyre::Result<Address> {
    // Deploy the contract.
    let contract = ERC20NoReturnMock::deploy(wallet).await?;
    Ok(*contract.address())
}
