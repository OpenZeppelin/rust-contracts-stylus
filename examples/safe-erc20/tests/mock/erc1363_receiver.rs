#![allow(dead_code)]
#![cfg(feature = "e2e")]
use alloy::{primitives::Address, sol};
use e2e::Wallet;

sol! {
    #[allow(missing_docs)]
    // Built with Remix IDE; solc v0.8.21+commit.d9974bed
    #[sol(rpc, bytecode="608060405234801561000f575f80fd5b506388a7ca5c60e01b5f806101000a81548163ffffffff021916908360e01c02179055505f8060046101000a81548160ff0219169083600481111561005757610056610061565b5b021790555061008e565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b6106f88061009b5f395ff3fe608060405234801561000f575f80fd5b5060043610610034575f3560e01c8063793179851461003857806388a7ca5c14610054575b5f80fd5b610052600480360381019061004d9190610324565b610084565b005b61006e60048036038101906100699190610450565b6100cd565b60405161007b91906104e3565b60405180910390f35b815f806101000a81548163ffffffff021916908360e01c0217905550805f60046101000a81548160ff021916908360048111156100c4576100c36104fc565b5b02179055505050565b5f600160048111156100e2576100e16104fc565b5b5f60049054906101000a900460ff166004811115610103576101026104fc565b5b0361010c575f80fd5b600260048111156101205761011f6104fc565b5b5f60049054906101000a900460ff166004811115610141576101406104fc565b5b03610181576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017890610583565b60405180910390fd5b60036004811115610195576101946104fc565b5b5f60049054906101000a900460ff1660048111156101b6576101b56104fc565b5b03610204575f8054906101000a900460e01b6040517f66435bc00000000000000000000000000000000000000000000000000000000081526004016101fb91906104e3565b60405180910390fd5b600480811115610217576102166104fc565b5b5f60049054906101000a900460ff166004811115610238576102376104fc565b5b0361024e575f805f61024a91906105ce565b9050505b7ed9411ae77b2bacabe5cbe62a2abdbeb78992a0182c6f3c83e0029c7615d6b68686868686604051610284959493929190610676565b60405180910390a15f8054906101000a900460e01b905095945050505050565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6102e0816102ac565b81146102ea575f80fd5b50565b5f813590506102fb816102d7565b92915050565b6005811061030d575f80fd5b50565b5f8135905061031e81610301565b92915050565b5f806040838503121561033a576103396102a4565b5b5f610347858286016102ed565b925050602061035885828601610310565b9150509250929050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61038b82610362565b9050919050565b61039b81610381565b81146103a5575f80fd5b50565b5f813590506103b681610392565b92915050565b5f819050919050565b6103ce816103bc565b81146103d8575f80fd5b50565b5f813590506103e9816103c5565b92915050565b5f80fd5b5f80fd5b5f80fd5b5f8083601f8401126104105761040f6103ef565b5b8235905067ffffffffffffffff81111561042d5761042c6103f3565b5b602083019150836001820283011115610449576104486103f7565b5b9250929050565b5f805f805f60808688031215610469576104686102a4565b5b5f610476888289016103a8565b9550506020610487888289016103a8565b9450506040610498888289016103db565b935050606086013567ffffffffffffffff8111156104b9576104b86102a8565b5b6104c5888289016103fb565b92509250509295509295909350565b6104dd816102ac565b82525050565b5f6020820190506104f65f8301846104d4565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b5f82825260208201905092915050565b7f4552433133363352656365697665724d6f636b3a20726576657274696e6700005f82015250565b5f61056d601e83610529565b915061057882610539565b602082019050919050565b5f6020820190508181035f83015261059a81610561565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6105d8826103bc565b91506105e3836103bc565b9250826105f3576105f26105a1565b5b828204905092915050565b61060781610381565b82525050565b610616816103bc565b82525050565b5f82825260208201905092915050565b828183375f83830152505050565b5f601f19601f8301169050919050565b5f610655838561061c565b935061066283858461062c565b61066b8361063a565b840190509392505050565b5f6080820190506106895f8301886105fe565b61069660208301876105fe565b6106a3604083018661060d565b81810360608301526106b681848661064a565b9050969550505050505056fea2646970667358221220b36acbb51b0ec80023818be5581023603d77df2268b87d825e5dfee44766a18b64736f6c63430008150033")]
    // SPDX-License-Identifier: MIT
    contract ERC1363ReceiverMock is IERC1363Receiver {
        enum RevertType {
            None,
            RevertWithoutMessage,
            RevertWithMessage,
            RevertWithCustomError,
            Panic
        }

        bytes4 private _retval;
        RevertType private _error;

        event Received(address operator, address from, uint256 value, bytes data);
        error CustomError(bytes4);

        constructor() {
            _retval = IERC1363Receiver.onTransferReceived.selector;
            _error = RevertType.None;
        }

        function setUp(bytes4 retval, RevertType error) public {
            _retval = retval;
            _error = error;
        }

        function onTransferReceived(
            address operator,
            address from,
            uint256 value,
            bytes calldata data
        ) external override returns (bytes4) {
            if (_error == RevertType.RevertWithoutMessage) {
                revert();
            } else if (_error == RevertType.RevertWithMessage) {
                revert("ERC1363ReceiverMock: reverting");
            } else if (_error == RevertType.RevertWithCustomError) {
                revert CustomError(_retval);
            } else if (_error == RevertType.Panic) {
                uint256 a = uint256(0) / uint256(0);
                a;
            }

            emit Received(operator, from, value, data);
            return _retval;
        }
    }
}

/// Deploy an ERC1363 receiver mock contract.
pub async fn deploy(wallet: &Wallet) -> eyre::Result<Address> {
    let contract = ERC1363ReceiverMock::deploy(wallet).await?;
    Ok(*contract.address())
}
