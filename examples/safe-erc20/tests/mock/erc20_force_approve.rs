#![allow(dead_code)]
#![cfg(feature = "e2e")]
use alloy::{primitives::Address, sol};
use e2e::Wallet;

sol! {
    #[allow(missing_docs)]
    // Built with Remix IDE; solc v0.8.21+commit.d9974bed
    #[sol(rpc, bytecode="608060405234801562000010575f80fd5b506040518060400160405280601581526020017f4552433230466f726365417070726f76654d6f636b00000000000000000000008152506040518060400160405280600381526020017f46414d000000000000000000000000000000000000000000000000000000000081525081600390816200008e91906200030d565b508060049081620000a091906200030d565b505050620003f1565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200012557607f821691505b6020821081036200013b576200013a620000e0565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026200019f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000162565b620001ab868362000162565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f620001f5620001ef620001e984620001c3565b620001cc565b620001c3565b9050919050565b5f819050919050565b6200021083620001d5565b620002286200021f82620001fc565b8484546200016e565b825550505050565b5f90565b6200023e62000230565b6200024b81848462000205565b505050565b5b818110156200027257620002665f8262000234565b60018101905062000251565b5050565b601f821115620002c1576200028b8162000141565b620002968462000153565b81016020851015620002a6578190505b620002be620002b58562000153565b83018262000250565b50505b505050565b5f82821c905092915050565b5f620002e35f1984600802620002c6565b1980831691505092915050565b5f620002fd8383620002d2565b9150826002028217905092915050565b6200031882620000a9565b67ffffffffffffffff811115620003345762000333620000b3565b5b6200034082546200010d565b6200034d82828562000276565b5f60209050601f83116001811462000383575f84156200036e578287015190505b6200037a8582620002f0565b865550620003e9565b601f198416620003938662000141565b5f5b82811015620003bc5784890151825560018201915060208501945060208101905062000395565b86831015620003dc5784890151620003d8601f891682620002d2565b8355505b6001600288020188555050505b505050505050565b610f1680620003ff5f395ff3fe608060405234801561000f575f80fd5b506004361061009c575f3560e01c806361f49ed61161006457806361f49ed61461015a57806370a082311461017657806395d89b41146101a6578063a9059cbb146101c4578063dd62ed3e146101f45761009c565b806306fdde03146100a0578063095ea7b3146100be57806318160ddd146100ee57806323b872dd1461010c578063313ce5671461013c575b5f80fd5b6100a8610224565b6040516100b59190610b27565b60405180910390f35b6100d860048036038101906100d39190610bd8565b6102b4565b6040516100e59190610c30565b60405180910390f35b6100f661031c565b6040516101039190610c58565b60405180910390f35b61012660048036038101906101219190610c71565b610325565b6040516101339190610c30565b60405180910390f35b610144610353565b6040516101519190610cdc565b60405180910390f35b610174600480360381019061016f9190610c71565b61035b565b005b610190600480360381019061018b9190610cf5565b61036b565b60405161019d9190610c58565b60405180910390f35b6101ae6103b0565b6040516101bb9190610b27565b60405180910390f35b6101de60048036038101906101d99190610bd8565b610440565b6040516101eb9190610c30565b60405180910390f35b61020e60048036038101906102099190610d20565b610462565b60405161021b9190610c58565b60405180910390f35b60606003805461023390610d8b565b80601f016020809104026020016040519081016040528092919081815260200182805461025f90610d8b565b80156102aa5780601f10610281576101008083540402835291602001916102aa565b820191905f5260205f20905b81548152906001019060200180831161028d57829003601f168201915b5050505050905090565b5f808214806102cb57505f6102c93385610462565b145b61030a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030190610e05565b60405180910390fd5b6103148383610475565b905092915050565b5f600254905090565b5f8061032f610497565b905061033c85828561049e565b610347858585610531565b60019150509392505050565b5f6012905090565b610366838383610621565b505050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6060600480546103bf90610d8b565b80601f01602080910402602001604051908101604052809291908181526020018280546103eb90610d8b565b80156104365780601f1061040d57610100808354040283529160200191610436565b820191905f5260205f20905b81548152906001019060200180831161041957829003601f168201915b5050505050905090565b5f8061044a610497565b9050610457818585610531565b600191505092915050565b5f61046d8383610633565b905092915050565b5f8061047f610497565b905061048c818585610621565b600191505092915050565b5f33905090565b5f6104a98484610462565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81101561052b578181101561051c578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161051393929190610e32565b60405180910390fd5b61052a84848484035f6106b5565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036105a1575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016105989190610e67565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610611575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016106089190610e67565b60405180910390fd5b61061c838383610884565b505050565b61062e83838360016106b5565b505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610725575f6040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161071c9190610e67565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610795575f6040517f94280d6200000000000000000000000000000000000000000000000000000000815260040161078c9190610e67565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550801561087e578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516108759190610c58565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108d4578060025f8282546108c89190610ead565b925050819055506109a2565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561095d578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161095493929190610e32565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109e9578060025f8282540392505081905550610a33565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610a909190610c58565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015610ad4578082015181840152602081019050610ab9565b5f8484015250505050565b5f601f19601f8301169050919050565b5f610af982610a9d565b610b038185610aa7565b9350610b13818560208601610ab7565b610b1c81610adf565b840191505092915050565b5f6020820190508181035f830152610b3f8184610aef565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610b7482610b4b565b9050919050565b610b8481610b6a565b8114610b8e575f80fd5b50565b5f81359050610b9f81610b7b565b92915050565b5f819050919050565b610bb781610ba5565b8114610bc1575f80fd5b50565b5f81359050610bd281610bae565b92915050565b5f8060408385031215610bee57610bed610b47565b5b5f610bfb85828601610b91565b9250506020610c0c85828601610bc4565b9150509250929050565b5f8115159050919050565b610c2a81610c16565b82525050565b5f602082019050610c435f830184610c21565b92915050565b610c5281610ba5565b82525050565b5f602082019050610c6b5f830184610c49565b92915050565b5f805f60608486031215610c8857610c87610b47565b5b5f610c9586828701610b91565b9350506020610ca686828701610b91565b9250506040610cb786828701610bc4565b9150509250925092565b5f60ff82169050919050565b610cd681610cc1565b82525050565b5f602082019050610cef5f830184610ccd565b92915050565b5f60208284031215610d0a57610d09610b47565b5b5f610d1784828501610b91565b91505092915050565b5f8060408385031215610d3657610d35610b47565b5b5f610d4385828601610b91565b9250506020610d5485828601610b91565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610da257607f821691505b602082108103610db557610db4610d5e565b5b50919050565b7f5553445420617070726f76616c206661696c75726500000000000000000000005f82015250565b5f610def601583610aa7565b9150610dfa82610dbb565b602082019050919050565b5f6020820190508181035f830152610e1c81610de3565b9050919050565b610e2c81610b6a565b82525050565b5f606082019050610e455f830186610e23565b610e526020830185610c49565b610e5f6040830184610c49565b949350505050565b5f602082019050610e7a5f830184610e23565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610eb782610ba5565b9150610ec283610ba5565b9250828201905080821115610eda57610ed9610e80565b5b9291505056fea2646970667358221220eb5abb28f8ab507701c0cefd178467ddb3b5615db8d7e303fbd71045453983a364736f6c63430008150033")]
    // SPDX-License-Identifier: MIT
    contract ERC20ForceApproveMock is ERC20 {
        constructor() ERC20("ERC20ForceApproveMock", "FAM") {}

        function approve(address spender, uint256 amount) public virtual override returns (bool) {
            require(amount == 0 || allowance(msg.sender, spender) == 0, "USDT approval failure");
            return super.approve(spender, amount);
        }

        function forceApprove(address owner, address spender, uint256 amount) public {
            super._approve(owner, spender, amount);
        }

        function allowance(address owner, address spender) public view override returns (uint256) {
            return super.allowance(owner, spender);
        }
    }
}

pub async fn deploy(wallet: &Wallet) -> eyre::Result<Address> {
    // Deploy the contract.
    let contract = ERC20ForceApproveMock::deploy(wallet).await?;
    Ok(*contract.address())
}
